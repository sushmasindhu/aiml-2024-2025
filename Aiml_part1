{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyP/+XAK1dOz8CKZEaOx46Ia",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/sushmasindhu/aiml-2024-2025/blob/main/Aiml_part1\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ZyVIeBRTACNV",
        "outputId": "73868fb5-2dd5-41f9-feb9-a689eb4f04fb"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([1, 2, 3])"
            ]
          },
          "metadata": {},
          "execution_count": 1
        }
      ],
      "source": [
        "import numpy as np\n",
        "list1=[1,2,3]\n",
        "array1=np.array(list1)\n",
        "array1\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "type(list1)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5EEZPRXDAips",
        "outputId": "df044401-e1af-4a6b-bf0c-82e61c3e8176"
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "list"
            ]
          },
          "metadata": {},
          "execution_count": 2
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "type(array1)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "r3Wgbba2A6Bl",
        "outputId": "12912cd1-3347-4d62-85ba-8bf25fe68b8a"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "numpy.ndarray"
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "list2=[3,2,1]\n",
        "array2=np.array(list2)\n",
        "array2"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "TdzTAQQtBSh5",
        "outputId": "ca69b3b8-f981-4b7c-85bf-dc6325bd8014"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([3, 2, 1])"
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"array2 multiplied by array1:\",array1*array2)\n",
        "print(\"array2 divided by array1:\",array2/array1)\n",
        "print(\"array2 raised to the power of array1:\",array2**array1)\n",
        "print(f\"{array2} raised to the power of {array1}:,{array2**array1}\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "MlO2RqDVBZAe",
        "outputId": "daf237ba-ba7b-4bc3-a3a0-8f71d23a4bc1"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "array2 multiplied by array1: [3 4 3]\n",
            "array2 divided by array1: [3.         1.         0.33333333]\n",
            "array2 raised to the power of array1: [3 4 1]\n",
            "[3 2 1] raised to the power of [1 2 3]:,[3 4 1]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"sine:\",np.sin(array1))\n",
        "print(\"Natural logarithm:\",np.log(array1))\n",
        "print(\"Base-10 logarithm:\",np.log10(array1))\n",
        "print(\"Base-2 logarithm:\",np.log2(array1))\n",
        "print(\"Exponential:\",np.exp(array1))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "sEhbhi5JBbo0",
        "outputId": "49c6915a-28d0-4fdc-b25e-be1e8ba88edc"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "sine: [0.84147098 0.90929743 0.14112001]\n",
            "Natural logarithm: [0.         0.69314718 1.09861229]\n",
            "Base-10 logarithm: [0.         0.30103    0.47712125]\n",
            "Base-2 logarithm: [0.        1.        1.5849625]\n",
            "Exponential: [ 2.71828183  7.3890561  20.08553692]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"Adding two numpay array {array1}and{array2} together:\",array1+array2)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "cpLrZiPcBgoF",
        "outputId": "e3551abd-d30d-4497-f383-297dbb21c44d"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Adding two numpay array {array1}and{array2} together: [4 4 4]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(f\"Adding two numpy arrays {array1}and {array2} together:\",array1+array2)\n",
        ""
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "C2ZuXN5OBl_l",
        "outputId": "20cdcdb9-52ae-4441-8a01-cb04fc563a9e"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Adding two numpy arrays [1 2 3]and [3 2 1] together: [4 4 4]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"substracting two numpy arrays {array1} and {array2} together:\",array1-array2)\n",
        ""
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "WMl8HkbZBrWj",
        "outputId": "63668ace-5808-4538-9401-1b03b2fed9a2"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "substracting two numpy arrays {array1} and {array2} together: [-2  0  2]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "people=['Ann','Brandon','chen','emily','farook','gagan','hamish','imran','jyo','ammu','lily']\n",
        "age=[21,22,12,32,45,37,18,28,53,5,40]\n",
        "weight=[22,33,44,55,66,77,88,99,12,23,45]\n",
        "height=[199,188,177,166,155,144,133,122,111,988,776]"
      ],
      "metadata": {
        "id": "1uc0U0HGBu-F"
      },
      "execution_count": 10,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n"
      ],
      "metadata": {
        "id": "HA6S9OGVB2Ui"
      },
      "execution_count": 11,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "plt.scatter(weight,height)\n",
        "plt.title(\"Relationship between weight and height of patients\")\n",
        "plt.ylabel(\"height in meters\")\n",
        "plt.xlabel(\"weight of patient in kgs\")\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 472
        },
        "id": "tzL2G7YhB6PZ",
        "outputId": "6362bec3-cf8b-48ed-b806-f68d4a8f0008"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAkQAAAHHCAYAAABeLEexAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAABUSklEQVR4nO3dd1gU1/s28HvpdUEQWLAiGhHRqBgVATERxZpgjbGhscVgjzWxBKMxaowtxpZf1BhbbLEkmiDYRSUqdhENdoqKFEVQ2fP+4ct8XSmyCuzC3J/r4kr2zNmZZ3Z25GbmzIxCCCFAREREJGMGui6AiIiISNcYiIiIiEj2GIiIiIhI9hiIiIiISPYYiIiIiEj2GIiIiIhI9hiIiIiISPYYiIiIiEj2GIiIiIhI9hiICACwf/9+KBQK7N+/v0jnq1Ao8PXXXxfpPLV1/fp1KBQKfP/996/t+/XXX0OhUBTZsnM+182bNxfZPOnt5HwfVq1a9cbvLcx3SV8Vdl/P2Rfu379fZMvu27cvqlat+sbvtbKyKrJa3kRiYiK6dOkCe3t7KBQKzJ8/X6f15KhatSr69u2r6zJKPQaiUmjVqlVQKBTSj5GRESpUqIC+ffvizp07JV7PX3/9pfPQIydHjx7F119/jZSUFF2XQgXgfqEbGRkZ+Prrr4v8jzsAGDVqFP7++29MnDgRa9asQevWrYt8GfnR9X4vh+8zA1EpNm3aNKxZswZLly5FmzZt8Ntvv8Hf3x+ZmZklWsdff/2F0NDQPKc9efIEkyZNKtF63sakSZPw5MkTXZdRoKNHjyI0NJSB6A1VqVIFT548Qe/evYt1OQXtF3K1YsUKxMTEFOsyMjIyEBoaWiyBKCIiAh999BHGjBmDXr16wd3dvciXkZ+C9vuYmBisWLGiWJcvh++zka4LoDfXpk0bNGzYEAAwYMAAlC9fHrNmzcKOHTvQrVs3HVf3gpmZma5L0IqRkRGMjLhblGUKhaLUfS/LCmNjY12X8FaSkpJga2ur6zJyMTU11XUJZQKPEJUhfn5+AIBr165ptF++fBldunSBnZ0dzMzM0LBhQ+zYseO18zt06BC6du2KypUrw9TUFJUqVcKoUaM0jqD07dsXixcvBgCN03g58hpDdPr0abRp0wZKpRJWVlZo0aIFjh07ptEn57TgkSNHMHr0aDg4OMDS0hIdO3bEvXv3NPr++++/CAwMRPny5WFubg5XV1d8+umnea7T8uXL4ebmBlNTU7z33nuIiorSmJ7XGCKFQoGhQ4di7dq1qFmzJszMzODl5YWDBw++9jPMkZ2djS+//BIqlQqWlpb48MMPcevWrVz9jh8/jtatW8PGxgYWFhbw9/fHkSNHNOobO3YsAMDV1VX6vK9fv45OnTqhQYMGGvPr0KEDFAqFxvY+fvw4FAoFdu/eLbWlpKRg5MiRqFSpEkxNTVG9enXMmjULarVaY35qtRrz589H7dq1YWZmBicnJwwePBgPHz7U6Fe1alW0b98ehw8fRqNGjWBmZoZq1arh119/fe1n1aBBA3Tq1EmjrU6dOlAoFDh79qzUtnHjRigUCly6dElqu3PnDj799FM4OTnB1NQUtWvXxi+//KIxr/zGEG3atAkeHh4wMzODp6cntm3bVuCYl4K+S6/bL/Kyfft2tGvXDi4uLjA1NYWbmxu++eYbZGdna/Rr3rw5PD09cfHiRbz//vuwsLBAhQoVMHv27FzzvH37NoKCgmBpaQlHR0eMGjUKWVlZBdbxqpSUFPTt2xe2trawsbFBv379kJGRkavfb7/9Bi8vL5ibm8POzg7du3fP9R3P6/N88OABevfuDaVSCVtbWwQHB+PMmTP5jvO6c+cOgoKCYGVlBQcHB4wZM0b6jK5fvw4HBwcAQGhoqPS5v+5Uz3///YeuXbvCzs4OFhYWaNKkCf78809pes6/R0IILF68+LXb8+WxZvPmzUOVKlVgbm4Of39/nD9/XqPv2bNn0bdvX1SrVg1mZmZQqVT49NNP8eDBA6lPQfs9kPcYosLs0y/X+Tbf5w0bNsDLywvW1tZQKpWoU6cOFixYUOBnro/4p3AZkrNzlCtXTmq7cOECfHx8UKFCBUyYMAGWlpb4/fffERQUhC1btqBjx475zm/Tpk3IyMjAkCFDYG9vjxMnTmDRokW4ffs2Nm3aBAAYPHgw7t69i7CwMKxZs+a1NV64cAF+fn5QKpUYN24cjI2NsWzZMjRv3hwHDhxA48aNNfoPGzYM5cqVw9SpU3H9+nXMnz8fQ4cOxcaNGwG8+IutVatWcHBwwIQJE2Bra4vr169j69atuZa9bt06pKenY/DgwVAoFJg9ezY6deqE//7777V/uR44cAAbN27E8OHDYWpqip9++gmtW7fGiRMn4Onp+dr1njFjBhQKBcaPH4+kpCTMnz8fAQEBiI6Ohrm5OYAXh+PbtGkDLy8vTJ06FQYGBli5ciU++OADHDp0CI0aNUKnTp1w5coVrF+/HvPmzUP58uUBAA4ODvDz88P27duRlpYGpVIJIQSOHDkCAwMDHDp0CB9++CGAF0HXwMAAPj4+AF6cYvD398edO3cwePBgVK5cGUePHsXEiRMRHx+vMXB08ODBWLVqFfr164fhw4cjLi4OP/74I06fPo0jR45ofI5Xr15Fly5d0L9/fwQHB+OXX35B37594eXlhdq1a+f7Wfn5+WH9+vXS6+TkZFy4cEFaj7p160rr4eDggFq1agF4MeC1SZMmUoB1cHDA7t270b9/f6SlpWHkyJH5LvPPP//Exx9/jDp16mDmzJl4+PAh+vfvjwoVKuTZ/3XfJW33C+DFL10rKyuMHj0aVlZWiIiIwJQpU5CWloY5c+Zo9H348CFat26NTp06oVu3bti8eTPGjx+POnXqoE2bNgBenK5u0aIFbt68ieHDh8PFxQVr1qxBREREoerJ0a1bN7i6umLmzJk4deoUfv75Zzg6OmLWrFlSnxkzZmDy5Mno1q0bBgwYgHv37mHRokVo1qwZTp8+ne9RFbVajQ4dOuDEiRMYMmQI3N3dsX37dgQHB+fZPzs7G4GBgWjcuDG+//577N27F3PnzoWbmxuGDBkCBwcHLFmyBEOGDEHHjh2lYJ3znclLYmIimjZtioyMDAwfPhz29vZYvXo1PvzwQ2zevBkdO3ZEs2bNsGbNGvTu3RstW7ZEnz59CvXZ/frrr0hPT0dISAgyMzOxYMECfPDBBzh37hycnJwAAGFhYfjvv//Qr18/qFQqXLhwAcuXL8eFCxdw7NgxKBSKAvf7vGizTwNv930OCwvDJ598ghYtWkjfiUuXLuHIkSMYMWJEoT4nvSGo1Fm5cqUAIPbu3Svu3bsnbt26JTZv3iwcHByEqampuHXrltS3RYsWok6dOiIzM1NqU6vVomnTpqJGjRpS2759+wQAsW/fPqktIyMj17JnzpwpFAqFuHHjhtQWEhIi8vsqARBTp06VXgcFBQkTExNx7do1qe3u3bvC2tpaNGvWLNc6BgQECLVaLbWPGjVKGBoaipSUFCGEENu2bRMARFRUVL6fV1xcnAAg7O3tRXJystS+fft2AUDs3LlTaps6dWqudQEgAIh///1Xartx44YwMzMTHTt2zHe5Qvzvc61QoYJIS0uT2n///XcBQCxYsEAI8WKb1KhRQwQGBmqsb0ZGhnB1dRUtW7aU2ubMmSMAiLi4OI1lRUVFCQDir7/+EkIIcfbsWQFAdO3aVTRu3Fjq9+GHH4r69etLr7/55hthaWkprly5ojG/CRMmCENDQ3Hz5k0hhBCHDh0SAMTatWs1+u3ZsydXe5UqVQQAcfDgQaktKSlJmJqaii+++KLAz2zTpk0CgLh48aIQQogdO3YIU1NT8eGHH4qPP/5Y6le3bl2Nz79///7C2dlZ3L9/X2N+3bt3FzY2NtL3Oef7sHLlSqlPnTp1RMWKFUV6errUtn//fgFAVKlSRWrT5rtU0H6Rl7z2t8GDBwsLCwuN/dff318AEL/++qvUlpWVJVQqlejcubPUNn/+fAFA/P7771Lb48ePRfXq1XPt63nJ2Rc+/fRTjfaOHTsKe3t76fX169eFoaGhmDFjhka/c+fOCSMjI4324OBgjc9zy5YtAoCYP3++1JadnS0++OCDXNsoODhYABDTpk3TWE79+vWFl5eX9PrevXu5/t0pyMiRIwUAcejQIaktPT1duLq6iqpVq4rs7GypHYAICQl57Txzvifm5ubi9u3bUvvx48cFADFq1CipLa/tvn79+lz7T377vRAv9rfg4GDpdWH36aL4Po8YMUIolUrx/PnzAj6R0oGnzEqxgIAAODg4oFKlSujSpQssLS2xY8cOVKxYEcCLv6wjIiLQrVs3pKen4/79+7h//z4ePHiAwMBAxMbGFnhVWs6RCwB4/Pgx7t+/j6ZNm0IIgdOnT2tdb3Z2Nv755x8EBQWhWrVqUruzszN69OiBw4cPIy0tTeM9gwYN0jg06+fnh+zsbNy4cQMApL88d+3ahWfPnhW4/I8//ljj6FnOKcb//vvvtbV7e3vDy8tLel25cmV89NFH+Pvvv3Od0shLnz59YG1tLb3u0qULnJ2d8ddffwEAoqOjERsbix49euDBgwfStnr8+DFatGiBgwcP5jp99ar69evDyspKOpV36NAhVKxYEX369MGpU6eQkZEBIQQOHz4srTvw4kign58fypUrJy33/v37CAgIQHZ2tjS/TZs2wcbGBi1bttTo5+XlBSsrK+zbt0+jHg8PD43lODg4oGbNmq/9vHPe8/J6vPfee2jZsiUOHToE4MXpgPPnz0t9hRDYsmULOnToACGERn2BgYFITU3FqVOn8lze3bt3ce7cOfTp00fjsm5/f3/UqVMnz/e8zXcpPy/vbzn7q5+fHzIyMnD58mWNvlZWVujVq5f02sTEBI0aNdJY/l9//QVnZ2d06dJFarOwsMCgQYO0quuzzz7TeO3n54cHDx5I++rWrVuhVqvRrVs3jc9dpVKhRo0aub4XL9uzZw+MjY0xcOBAqc3AwAAhISFa1fM2n/tff/2FRo0awdfXV2qzsrLCoEGDcP36dVy8ePGN5x0UFKRxlLFRo0Zo3LixtN8Dmts9MzMT9+/fR5MmTQAg3+/s6xR2n87xNt9nW1tbPH78GGFhYW9Uqz7hKbNSbPHixXjnnXeQmpqKX375BQcPHtQYXHf16lUIITB58mRMnjw5z3kkJSXle1rg5s2bmDJlCnbs2JFrjEhqaqrW9d67dw8ZGRmoWbNmrmm1atWCWq3GrVu3NE6nVK5cWaNfzk6bU4+/vz86d+6M0NBQzJs3D82bN0dQUBB69OiRa6Dh6+ZVkBo1auRqe+edd5CRkYF79+5BpVJp9X6FQoHq1atLpzljY2MBIN9TBcCLz/zlf7ReZWhoCG9vbyk0HDp0CH5+fvD19UV2djaOHTsGJycnJCcnawSV2NhYnD17Nt/D70lJSVK/1NRUODo6Ftgvx6ufN/DiM3/d5+3k5IQaNWrg0KFDGDx4MA4dOoT3338fzZo1w7Bhw/Dff//h0qVLUKvV0nrcu3cPKSkpWL58OZYvX16o+nLkhOvq1avnmla9evU8fym9zXcpPxcuXMCkSZMQERGR6w+DV/e3ihUr5hrDUq5cOY0xVjdu3ED16tVz9ctr/ytIQeuqVCoRGxsLIUSe+whQ8EDqGzduwNnZGRYWFhrteW0L4MVFGq9+TwvznSrIjRs3cp2qByCdir1x40ahTovnJb9/N37//XfpdXJyMkJDQ7Fhw4Zc39E3+XcWKPw+neNtvs+ff/45fv/9d7Rp0wYVKlRAq1at0K1btxK9JUFRYSAqxRo1aiRdZRYUFARfX1/06NEDMTExsLKyko4ojBkzBoGBgXnOI79/eLKzs9GyZUskJydj/PjxcHd3h6WlJe7cuYO+ffu+9mhFUTE0NMyzXQgBANJND48dO4adO3fi77//xqeffoq5c+fi2LFjGn/xv25eupTzec6ZMwf16tXLs09hbkrn6+uLGTNmIDMzE4cOHcJXX30FW1tbeHp64tChQ9K4hZcDkVqtRsuWLTFu3Lg85/nOO+9I/RwdHbF27do8+736j+/bfN6+vr4IDw/HkydPcPLkSUyZMgWenp6wtbXFoUOHcOnSJVhZWaF+/fpSbQDQq1evfENlQeNItFXU36WUlBT4+/tDqVRi2rRpcHNzg5mZGU6dOoXx48fn2t9K8rv8umWp1WppkH5efYvyZor51VKadevWDUePHsXYsWNRr1496d/u1q1bv/G/s4Xdp3O8zffJ0dER0dHR+Pvvv7F7927s3r0bK1euRJ8+fbB69Wrti9chBqIywtDQEDNnzsT777+PH3/8ERMmTJBOSxkbGyMgIECr+Z07dw5XrlzB6tWrNQYQ5nVYtLB3dnZwcICFhUWe9yG5fPkyDAwMUKlSJa3qzNGkSRM0adIEM2bMwLp169CzZ09s2LABAwYMeKP5vSrnCM7Lrly5AgsLi3z/Civo/UIIXL16Vfol7ebmBgBQKpWv3VYFfd5+fn54+vQp1q9fjzt37kjBp1mzZlIgeuedd6RglLPsR48evXa5bm5u2Lt3L3x8fDQO8xcHPz8/rFy5Ehs2bEB2djaaNm0KAwMD+Pr6SoGoadOm0j/kDg4OsLa2RnZ2ttbf9SpVqgB4cUT1VXm1FZY2dzzfv38/Hjx4gK1bt6JZs2ZSe1xc3Bsvv0qVKjh//jyEEBq1FPV9gNzc3CCEgKura65ftIWpcd++fcjIyNA4SlRSn3tODfn9m5Qz/U3l9+9GzpV2Dx8+RHh4OEJDQzFlypQC36fNehV2n9ZGQcs3MTFBhw4d0KFDB6jVanz++edYtmwZJk+enO8f3fqIY4jKkObNm6NRo0aYP38+MjMz4ejoiObNm2PZsmWIj4/P1f/Vy9dflvOL5uW/EIQQeV5KaWlpCQCvvVGgoaEhWrVqhe3bt0unioAXV3msW7cOvr6+UCqVBc7jVQ8fPsz1V0zOERZtLy8uSGRkpMapk1u3bmH79u1o1apVof5qzbnaJMfmzZsRHx8vXRHk5eUFNzc3fP/993j06FGu97+8rQr6vBs3bgxjY2PMmjULdnZ20ulHPz8/HDt2DAcOHNA4OgS8+As1MjISf//9d675paSk4Pnz51K/7OxsfPPNN7n6PX/+vEhvFJlT46xZs1C3bl3Y2NhI7eHh4fj333811sPQ0BCdO3fGli1bcl3WDBT8XXdxcYGnpyd+/fVXjc/+wIEDOHfu3BuvQ2H3CyDv/e3p06f46aef3nj5bdu2xd27dzUeG5ORkZHvKcU31alTJxgaGiI0NDTXviiE0Lh8/FWBgYF49uyZxk0F1Wq1dIn3m8gJVoX9PrZt2xYnTpxAZGSk1Pb48WMsX74cVatWhYeHxxvX8scff2iM0zxx4gSOHz8u7fd5bXcAeT4SRJvvU2H3aW3kt/xXt6+BgYH0h15R/htcEniEqIwZO3YsunbtilWrVuGzzz7D4sWL4evrizp16mDgwIGoVq0aEhMTERkZidu3b+PMmTN5zsfd3R1ubm4YM2YM7ty5A6VSiS1btuR5TjlnsPHw4cMRGBgIQ0NDdO/ePc/5Tp8+HWFhYfD19cXnn38OIyMjLFu2DFlZWXneR+V1Vq9ejZ9++gkdO3aEm5sb0tPTsWLFCiiVSrRt21br+eXH09MTgYGBGpfdAyj0nVvt7Ozg6+uLfv36ITExEfPnz0f16tWlwaQGBgb4+eef0aZNG9SuXRv9+vVDhQoVcOfOHezbtw9KpRI7d+4E8L/P+6uvvkL37t1hbGyMDh06wNLSEhYWFvDy8sKxY8ekexABL44QPX78GI8fP84ViMaOHYsdO3agffv20mXxjx8/xrlz57B582Zcv34d5cuXh7+/PwYPHoyZM2ciOjoarVq1grGxMWJjY7Fp0yYsWLBAYwDv26hevTpUKhViYmIwbNgwqb1Zs2YYP348AORaj++++w779u1D48aNMXDgQHh4eCA5ORmnTp3C3r17kZycnO/yvv32W3z00Ufw8fFBv3798PDhQ/z444/w9PTMM6AWhjb7RdOmTVGuXDkEBwdj+PDhUCgUWLNmzVudAhs4cCB+/PFH9OnTBydPnoSzszPWrFmTa7zO23Jzc8P06dMxceJEXL9+HUFBQbC2tkZcXBy2bduGQYMGYcyYMXm+NygoCI0aNcIXX3yBq1evwt3dHTt27JC21Zs8V9Dc3BweHh7YuHEj3nnnHdjZ2cHT0zPfcUATJkzA+vXr0aZNGwwfPhx2dnZYvXo14uLisGXLFhgYvPlxg+rVq8PX1xdDhgxBVlYW5s+fD3t7e+lUllKpRLNmzTB79mw8e/YMFSpUwD///JPnkcGC9vtXFXaf1kZ+3+cBAwYgOTkZH3zwASpWrIgbN25g0aJFqFevnjQOq9QouQvaqKjkXJKe16Xm2dnZws3NTbi5uUmXQV67dk306dNHqFQqYWxsLCpUqCDat28vNm/eLL0vr8vuL168KAICAoSVlZUoX768GDhwoDhz5kyuy2GfP38uhg0bJhwcHIRCodC4NBN5XP566tQpERgYKKysrISFhYV4//33xdGjRwu1jq/WeerUKfHJJ5+IypUrC1NTU+Ho6Cjat2+vcYl8zqWlc+bMyfV5vVpffpfdh4SEiN9++03UqFFDmJqaivr167/2suWX612/fr2YOHGicHR0FObm5qJdu3Yaty7Icfr0adGpUydhb28vTE1NRZUqVUS3bt1EeHi4Rr9vvvlGVKhQQRgYGOS6FHfs2LECgJg1a5bGe3Iut375lgc50tPTxcSJE0X16tWFiYmJKF++vGjatKn4/vvvxdOnTzX6Ll++XHh5eQlzc3NhbW0t6tSpI8aNGyfu3r0r9alSpYpo165druX4+/sLf3//135uQgjRtWtXAUBs3LhRanv69KmwsLAQJiYm4smTJ7nek5iYKEJCQkSlSpWEsbGxUKlUokWLFmL58uVSn7wuuxdCiA0bNgh3d3dhamoqPD09xY4dO0Tnzp2Fu7t7rvcW5rtU0H6RlyNHjogmTZoIc3Nz4eLiIsaNGyf+/vvvXPulv7+/qF27dq73v3pJuxAvbg/x4YcfCgsLC1G+fHkxYsQI6TYJhb3s/t69exrtOfvmq5d/b9myRfj6+gpLS0thaWkp3N3dRUhIiIiJiSmwxnv37okePXoIa2trYWNjI/r27SuOHDkiAIgNGzZovNfS0jLfOl929OhR4eXlJUxMTAp1Cf61a9dEly5dhK2trTAzMxONGjUSu3btytUv59+C13n5ezJ37lxRqVIlYWpqKvz8/MSZM2c0+t6+fVt07NhR2NraChsbG9G1a1dx9+7dPOvOb79/9bJ7IQq3TxfF93nz5s2iVatWwtHRUZiYmIjKlSuLwYMHi/j4+Nd+TvpGIYQejCgl0mMKhQIhISH48ccfdV0KlbB69erBwcGhTFxSXJr88ccf6NixIw4fPizdQLQ0uX79OlxdXTFnzpx8j46R/uEYIiKSvWfPnuUaV7F//36cOXMGzZs3101RMvHqw5Szs7OxaNEiKJXKXI+iISpOHENERLJ3584dBAQEoFevXnBxccHly5exdOlSqFSqXDcCpKI1bNgwPHnyBN7e3sjKysLWrVtx9OhRfPvtt8V+NSPRyxiIiEj2ypUrBy8vL/z888+4d+8eLC0t0a5dO3z33Xewt7fXdXll2gcffIC5c+di165dyMzMRPXq1bFo0SIMHTpU16WRzHAMEREREckexxARERGR7DEQERERkexxDFEhqNVq3L17F9bW1m90ozAiIiIqeUIIpKenw8XF5bU32WQgKoS7d+++8TO2iIiISLdu3bqFihUrFtiHgagQrK2tAbz4QLV91hYRERHpRlpaGipVqiT9Hi8IA1Eh5JwmUyqVDERERESlTGGGu3BQNREREckeAxERERHJHgMRERERyR4DEREREckeAxERERHJnk4D0cGDB9GhQwe4uLhAoVDgjz/+0JguhMCUKVPg7OwMc3NzBAQEIDY2VqNPcnIyevbsCaVSCVtbW/Tv3x+PHj3S6HP27Fn4+fnBzMwMlSpVwuzZs4t71YiIiKgU0Wkgevz4Md59910sXrw4z+mzZ8/GwoULsXTpUhw/fhyWlpYIDAxEZmam1Kdnz564cOECwsLCsGvXLhw8eBCDBg2SpqelpaFVq1aoUqUKTp48iTlz5uDrr7/G8uXLi339iIiIqJQQegKA2LZtm/RarVYLlUol5syZI7WlpKQIU1NTsX79eiGEEBcvXhQARFRUlNRn9+7dQqFQiDt37gghhPjpp59EuXLlRFZWltRn/PjxombNmoWuLTU1VQAQqampb7p6REREVMK0+f2tt2OI4uLikJCQgICAAKnNxsYGjRs3RmRkJAAgMjIStra2aNiwodQnICAABgYGOH78uNSnWbNmMDExkfoEBgYiJiYGDx8+zHPZWVlZSEtL0/ghIiKisktvA1FCQgIAwMnJSaPdyclJmpaQkABHR0eN6UZGRrCzs9Pok9c8Xl7Gq2bOnAkbGxvph88xe3PZaoHIaw+wPfoOIq89QLZa6LokIiKiXPjojjxMnDgRo0ePll7nPAuFtLPnfDxCd15EfOr/xnw525hhagcPtPZ01mFlREREmvT2CJFKpQIAJCYmarQnJiZK01QqFZKSkjSmP3/+HMnJyRp98prHy8t4lampqfTcMj6/7M3sOR+PIb+d0ghDAJCQmokhv53CnvPxOqqMiIgoN70NRK6urlCpVAgPD5fa0tLScPz4cXh7ewMAvL29kZKSgpMnT0p9IiIioFar0bhxY6nPwYMH8ezZM6lPWFgYatasiXLlypXQ2shLtlogdOdF5HVyLKctdOdFnj4jIiK9odNA9OjRI0RHRyM6OhrAi4HU0dHRuHnzJhQKBUaOHInp06djx44dOHfuHPr06QMXFxcEBQUBAGrVqoXWrVtj4MCBOHHiBI4cOYKhQ4eie/fucHFxAQD06NEDJiYm6N+/Py5cuICNGzdiwYIFGqfEqGidiEvOdWToZQJAfGomTsQll1xRREREBdDpGKJ///0X77//vvQ6J6QEBwdj1apVGDduHB4/foxBgwYhJSUFvr6+2LNnD8zMzKT3rF27FkOHDkWLFi1gYGCAzp07Y+HChdJ0Gxsb/PPPPwgJCYGXlxfKly+PKVOmaNyriIpWUnr+YehN+hERERU3hRCC5y1eIy0tDTY2NkhNTeV4okKIvPYAn6w49tp+6wc2gbebfQlUREREcqTN72+9HUNEpVcjVzs425hBkc90BV5cbdbI1a4kyyIiIsoXAxEVOUMDBaZ28ACAXKEo5/XUDh4wNMgvMhEREZUsBiIqFq09nbGkVwOobMw02lU2ZljSqwHvQ0RERHqFN2akYtPa0xktPVQ4EZeMpPRMOFq/OE3GI0NERKRvGIioWBkaKDhwmoiI9B5PmREREZHsMRARERGR7DEQERERkewxEBEREZHsMRARERGR7DEQERERkewxEBEREZHsMRARERGR7DEQERERkewxEBEREZHsMRARERGR7DEQERERkewxEBEREZHsMRARERGR7DEQERERkewxEBEREZHsMRARERGR7DEQERERkewxEBEREZHsMRARERGR7DEQERERkewxEBEREZHsMRARERGR7DEQERERkewxEBEREZHsMRARERGR7DEQERERkewxEBEREZHsMRARERGR7DEQERERkewxEBEREZHsMRARERGR7DEQERERkewxEBEREZHsMRARERGR7DEQERERkewxEBEREZHsMRARERGR7DEQERERkewxEBEREZHsMRARERGR7DEQERERkewxEBEREZHsMRARERGR7DEQERERkewxEBEREZHsMRARERGR7DEQERERkewxEBEREZHsMRARERGR7DEQERERkewxEBEREZHsMRARERGR7DEQERERkewxEBEREZHsMRARERGR7DEQERERkewxEBEREZHsMRARERGR7DEQERERkewxEBEREZHs6XUgys7OxuTJk+Hq6gpzc3O4ubnhm2++gRBC6iOEwJQpU+Ds7Axzc3MEBAQgNjZWYz7Jycno2bMnlEolbG1t0b9/fzx69KikV4eIiIj0lF4HolmzZmHJkiX48ccfcenSJcyaNQuzZ8/GokWLpD6zZ8/GwoULsXTpUhw/fhyWlpYIDAxEZmam1Kdnz564cOECwsLCsGvXLhw8eBCDBg3SxSoRERGRHlKIlw+36Jn27dvDyckJ//d//ye1de7cGebm5vjtt98ghICLiwu++OILjBkzBgCQmpoKJycnrFq1Ct27d8elS5fg4eGBqKgoNGzYEACwZ88etG3bFrdv34aLi8tr60hLS4ONjQ1SU1OhVCqLZ2WJiIioSGnz+1uvjxA1bdoU4eHhuHLlCgDgzJkzOHz4MNq0aQMAiIuLQ0JCAgICAqT32NjYoHHjxoiMjAQAREZGwtbWVgpDABAQEAADAwMcP348z+VmZWUhLS1N44eIiIjKLiNdF1CQCRMmIC0tDe7u7jA0NER2djZmzJiBnj17AgASEhIAAE5OThrvc3JykqYlJCTA0dFRY7qRkRHs7OykPq+aOXMmQkNDi3p1iIiISE/p9RGi33//HWvXrsW6detw6tQprF69Gt9//z1Wr15drMudOHEiUlNTpZ9bt24V6/KIiIhIt/T6CNHYsWMxYcIEdO/eHQBQp04d3LhxAzNnzkRwcDBUKhUAIDExEc7OztL7EhMTUa9ePQCASqVCUlKSxnyfP3+O5ORk6f2vMjU1hampaTGsEREREekjvT5ClJGRAQMDzRINDQ2hVqsBAK6urlCpVAgPD5emp6Wl4fjx4/D29gYAeHt7IyUlBSdPnpT6REREQK1Wo3HjxiWwFkRERKTv9PoIUYcOHTBjxgxUrlwZtWvXxunTp/HDDz/g008/BQAoFAqMHDkS06dPR40aNeDq6orJkyfDxcUFQUFBAIBatWqhdevWGDhwIJYuXYpnz55h6NCh6N69e6GuMCMiIFstcCIuGUnpmXC0NkMjVzsYGih0XRYRUZHR60C0aNEiTJ48GZ9//jmSkpLg4uKCwYMHY8qUKVKfcePG4fHjxxg0aBBSUlLg6+uLPXv2wMzMTOqzdu1aDB06FC1atICBgQE6d+6MhQsX6mKViEqdPefjEbrzIuJT/3dvL2cbM0zt4IHWns4FvJOIqPTQ6/sQ6Qveh4jkas/5eAz57RRe/Uci59jQkl4NGIqISG+VmfsQEZHuZKsFQndezBWGAEhtoTsvIlvNv6mIqPRjICKiPJ2IS9Y4TfYqASA+NRMn4pJLrigiomLCQEREeUpKzz8MvUk/IiJ9xkBERHlytDZ7fSct+hER6TMGIiLKUyNXOzjbmCG/i+sVeHG1WSNXu5Isi4ioWDAQEVGeDA0UmNrBAwByhaKc11M7ePB+RERUJjAQEVG+Wns6Y0mvBlDZaJ4WU9mY8ZJ7IipT9PrGjESke609ndHSQ8U7VRNRmcZARESvZWiggLebva7LICIqNjxlRkRERLLHQERERESyx0BEREREssdARERERLLHQERERESyx0BEREREssdARERERLLHQERERESyx0BEREREssdARERERLLHQERERESyx0BEREREssdARERERLLHQERERESyx0BEREREssdARERERLLHQERERESyx0BEREREssdARERERLLHQERERESyx0BEREREssdARERERLLHQERERESyx0BEREREsqd1INqzZw8OHz4svV68eDHq1auHHj164OHDh0VaHBEREVFJ0DoQjR07FmlpaQCAc+fO4YsvvkDbtm0RFxeH0aNHF3mBRERERMXNSNs3xMXFwcPDAwCwZcsWtG/fHt9++y1OnTqFtm3bFnmBRERERMVN6yNEJiYmyMjIAADs3bsXrVq1AgDY2dlJR46IiIiIShOtjxD5+Phg9OjR8PHxwYkTJ7Bx40YAwJUrV1CxYsUiL5CIiIiouGl9hGjx4sUwNjbG5s2bsWTJElSoUAEAsHv3brRu3brICyQiIiIqbgohhChs5+fPn2PdunVo1aoVVCpVcdalV9LS0mBjY4PU1FQolUpdl0NERESFoM3vb62OEBkZGeGzzz5DVlbWWxVIREREpE+0PmXWqFEjnD59ujhqISIiItIJrQdVf/755/jiiy9w+/ZteHl5wdLSUmN63bp1i6w4IiIiopKg1RgiADAwyH1QSaFQQAgBhUKB7OzsIitOX3AMERERUemjze/vN7oxIxEREVFZonUgqlKlSnHUQURERKQzb/S0+zVr1sDHxwcuLi64ceMGAGD+/PnYvn17kRZHREREVBK0DkRLlizB6NGj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BfatW7dukRRGREREVFIKFYjq1auHhIQEODo6ol69elAoFMhr6FFZHUNEREREZVuhAlFcXBwcHByk/yciIiIqSwoViKpUqZLn/xMRERGVBXzaPREREckeAxERERHJHgMRERERyR4DEREREcme1oGoWrVqePDgQa72lJQUVKtWrUiKIiIiIipJWgei69ev53mvoaysLNy5c6dIiiIiIiIqSYV+dMeOHTuk///7779hY2Mjvc7OzkZ4eDiqVq1apMURERERlYRCB6KgoCAAL+5GHRwcrDHN2NgYVatWxdy5c4u0OCIiIqKSUOhApFarAQCurq6IiopC+fLli60oIiIiopKk9dPu+egOIiIiKmu0DkQAEB4ejvDwcCQlJUlHjnL88ssvRVIYERERUUnROhCFhoZi2rRpaNiwIZydnaFQKIqjLiIiIqISo3UgWrp0KVatWoXevXsXRz1EREREJU7r+xA9ffoUTZs2LY5aiIiIiHRC60A0YMAArFu3rjhqISIiItKJQp0yGz16tPT/arUay5cvx969e1G3bl0YGxtr9P3hhx+KtkIiIiKiYlaoQHT69GmN1/Xq1QMAnD9/XqOdA6yJiIioNCpUINq3b19x10FERESkM1qPISIiIiIqa7S+7L5jx455nhpTKBQwMzND9erV0aNHD9SsWbNICiQiIiIqblofIbKxsUFERAROnToFhUIBhUKB06dPIyIiAs+fP8fGjRvx7rvv4siRI8VRLxEREVGR0/oIkUqlQo8ePfDjjz/CwOBFnlKr1RgxYgSsra2xYcMGfPbZZxg/fjwOHz5c5AUTERERFTWFEEJo8wYHBwccOXIE77zzjkb7lStX0LRpU9y/fx/nzp2Dn58fUlJSirJWnUlLS4ONjQ1SU1OhVCp1XQ4REREVgja/v7U+Zfb8+XNcvnw5V/vly5eRnZ0NADAzM+Ml+ERERFRqaH3KrHfv3ujfvz++/PJLvPfeewCAqKgofPvtt+jTpw8A4MCBA6hdu3bRVkpERERUTLQORPPmzYOTkxNmz56NxMREAICTkxNGjRqF8ePHAwBatWqF1q1bF22lRERERMVE6zFEL0tLSwOAMj+uhmOIiIiISh9tfn9rfYToZQwHREREVBYUKhA1aNAA4eHhKFeuHOrXr1/ggOlTp04VWXFEREREJaFQgeijjz6CqakpACAoKKg46yEi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\n"
          },
          "metadata": {}
        }
      ]
    }
  ]
}